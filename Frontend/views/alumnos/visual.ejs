<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Juego de Disgrafía</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script>
        const idAlumno = sessionStorage.getItem('idAlumno');
        if (!idAlumno) {
            window.location.href = '/'
        }
    </script>
    <style>
        /* Paleta de colores */
        :root {
            --azul: rgb(56, 182, 255);
            --verde: rgb(149, 253, 17);
            --rosado: rgb(237, 26, 119);
            --morado: rgb(199, 0, 255);
            --naranja: rgb(255, 167, 16);
            --amarillo: rgb(253, 215, 0);
            --rojo: rgb(255, 0, 0);
        }

        body {
            background-image: url('/assets/FondoModuloVisual.png');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        .game-container {
            text-align: center;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 50px;
            border-radius: 20px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            width: 60%;
            position: relative;
        }

        .letter {
            font-size: 10rem;
            font-weight: bold;
            color: var(--azul);
            margin-bottom: 50px;
        }

        .options {
            display: flex;
            justify-content: center;
            gap: 60px;
        }

        .options button {
            font-size: 8rem;
            padding: 10px;
            width: 200px;
            height: 200px;
            border-radius: 20px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            border: none;
            font-weight: bold;
            background-color: var(--amarillo);
        }

        .options button:hover {
            background-color: var(--naranja);
            color: white;
        }

        .correct {
            background-color: var(--verde) !important;
            color: white;
        }

        .incorrect {
            background-color: var(--rojo) !important;
            color: white;
        }

        .level {
            position: absolute;
            top: 20px;
            right: 30px;
            font-size: 3rem;
            color: var(--morado);
            font-weight: bold;
        }

        #stars img {
            width: 100px;
            height: auto;
            margin: 0 10px;
        }

        .btn-volver {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 1000;
            padding-left: 15px !important;
            padding: 0.5vw 2vw;
            font-size: 1.2vw;
            background-color: var(--morado);
            border: none;
            color: white;
            border-radius: 10px;
            cursor: pointer;

        }

        .btn-volver :hover {
            background-color: var(--rosado);
            color: white;
        }

        .btn-volver i {
            margin-right: 8px;
        }

        @media (max-width: 768px) {
            .options {
                gap: 30px;
            }

            .letter {
                font-size: 8rem;
            }

            .options button {
                font-size: 4rem;
                padding: 20px;
                width: 150px;
                height: 150px;
            }
        }
    </style>
</head>

<body>
    <button class="btn btn-volver btn-lg" id="btn-volver">
        <i class="fas fa-arrow-left"></i> Menú
    </button>
    <div class="game-container">
        <div id="level" class="level">Nivel: 1/10</div>
        <div id="letter" class="letter">b</div>
        <div class="options">
            <button id="option1">h</button>
            <button id="option2">b</button>
            <button id="option3">d</button>
        </div>
    </div>

    <audio id="correctSound" src="/assets/sonidos/correcto.mp3"></audio>
    <audio id="incorrectSound" src="/assets/sonidos/error.mp3"></audio>
    <audio id="completedSound" src="/assets/sonidos/completado.mp3"></audio>
    <audio id="twoStarsSound" src="/assets/sonidos/medio.mp3"></audio>
    <audio id="oneStarSound" src="/assets/sonidos/lost.mp3"></audio>

    <div class="modal fade" id="resultModal" tabindex="-1" aria-labelledby="resultModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="resultModalLabel">Resultado de la Lección</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="stars" class="text-center mb-4">
                        <!-- Aquí se mostrarán las imágenes de las estrellas -->
                    </div>
                    <p id="resultMessage" class="text-center"></p>
                </div>
                <div class="text-center mt-3">
                    <h3 id="scoreDisplay"></h3>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" id="retryBtn"
                        style="display:none;">Reintentar</button>
                    <button type="button" class="btn btn-success" data-dismiss="modal" id="nextExerciseBtn">Siguiente
                        Ejercicio</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>


        const avatarAlumno = sessionStorage.getItem('avatarAlumno');
        const nombreAlumno = sessionStorage.getItem('nombreAlumno');
        const codigoAlumno = sessionStorage.getItem('coidgoAlumno');



        const levels = [
            { correct: 'b', options: ['h', 'b', 'd'] },
            { correct: 'p', options: ['q', 'p', 'b'] },
            { correct: 'm', options: ['n', 'w', 'm'] },
            { correct: 'h', options: ['n', 'b', 'h'] },
            { correct: 'r', options: ['v', 'r', 't'] },
            { correct: 'c', options: ['c', 'e', 'g'] },
            { correct: 'y', options: ['y', 'g', 'v'] },
            { correct: 't', options: ['l', 't', 'f'] },
            { correct: '2', options: ['z', 's', '2'] },
            { correct: '5', options: ['5', 's', 'z'] }
        ];

        let currentLevel = 0;
        let totalErrors = 0; // Contador de errores totales
        let errors = Array(levels.length).fill(0); // Errores por nivel
        let attempts = 0;
        const maxAttempts = 3;

        const letterElement = document.getElementById('letter');
        const option1 = document.getElementById('option1');
        const option2 = document.getElementById('option2');
        const option3 = document.getElementById('option3');
        const levelElement = document.getElementById('level');
        const correctSound = document.getElementById('correctSound');
        const incorrectSound = document.getElementById('incorrectSound');
        const completedSound = document.getElementById('completedSound');
        const twoStarsSound = document.getElementById('twoStarsSound');
        const oneStarSound = document.getElementById('oneStarSound');
        const btnVolver = document.getElementById('btn-volver');

        btnVolver.addEventListener('click', ()=>{
            window.location.href='/aprendeJugando'
        })

        function loadLevel(levelIndex) {
            const levelData = levels[levelIndex];
            letterElement.textContent = levelData.correct;
            option1.textContent = levelData.options[0];
            option2.textContent = levelData.options[1];
            option3.textContent = levelData.options[2];
            levelElement.textContent = `Nivel: ${levelIndex + 1}/10`;

            option1.classList.remove('correct', 'incorrect');
            option2.classList.remove('correct', 'incorrect');
            option3.classList.remove('correct', 'incorrect');
        }

        function handleOptionClick(optionButton, optionValue) {
            const currentCorrect = levels[currentLevel].correct;
            if (optionValue === currentCorrect) {
                optionButton.classList.add('correct');
                correctSound.play();
                currentLevel++;
                if (currentLevel < levels.length) {
                    setTimeout(() => {
                        loadLevel(currentLevel);
                    }, 1000);
                } else {
                    setTimeout(() => {
                        showResults();
                    }, 1000);
                }
            } else {
                optionButton.classList.add('incorrect');
                incorrectSound.play();
                errors[currentLevel]++; // Incrementar errores por nivel
                totalErrors++; // Incrementar errores totales
            }
        }

        option1.addEventListener('click', () => handleOptionClick(option1, option1.textContent));
        option2.addEventListener('click', () => handleOptionClick(option2, option2.textContent));
        option3.addEventListener('click', () => handleOptionClick(option3, option3.textContent));

        loadLevel(currentLevel);

        function showResults() {
            const totalCorrect = levels.length - totalErrors;
            let correctPercentage = (totalCorrect / levels.length) * 100;

            // Evitar que el porcentaje sea menor que 10%
            correctPercentage = Math.max(correctPercentage, 5);

            let stars = '';
            let message = '';

            if (correctPercentage === 100) {
                stars = '<img src="/assets/estrella.png" alt="estrella"> <img src="/assets/estrella.png" alt="estrella"> <img src="/assets/estrella.png" alt="estrella">';
                message = '¡Excelente trabajo! Perfecto.';
                completedSound.play();
            } else if (correctPercentage >= 50) {
                stars = '<img src="/assets/estrella.png" alt="estrella"> <img src="/assets/estrella.png" alt="estrella">';
                message = '¡Buen trabajo! Sigue practicando.';
                twoStarsSound.play();
            } else {
                stars = '<img src="/assets/estrella.png" alt="estrella">';
                message = '¡Puedes mejorar! Inténtalo de nuevo.';
                oneStarSound.play();
            }

            document.getElementById('stars').innerHTML = stars;
            document.getElementById('resultMessage').textContent = message;

            if (correctPercentage < 100 && attempts < maxAttempts) {
                attempts++;
                document.getElementById('retryBtn').textContent = `Intento ${attempts} de ${maxAttempts}`;
                document.getElementById('retryBtn').style.display = 'inline-block'; // Mostrar el botón de reintento

                document.getElementById('retryBtn').addEventListener('click', () => {
                    $('#resultModal').modal('hide');
                    resetGame(); // Reiniciar el juego si el usuario decide reintentar
                });
            } else {
                document.getElementById('retryBtn').style.display = 'none'; // Ocultar el botón de reintento si no hay más intentos disponibles
            }
            document.getElementById('nextExerciseBtn').addEventListener('click', () => {
                window.location.href = "/aprendeJugando";
            });
            document.getElementById('scoreDisplay').innerHTML = `Calificación: ${correctPercentage.toFixed(2)}%`;
            localStorage.setItem('visual', `${correctPercentage.toFixed(2)}%`); 


            $('#resultModal').modal('show');
        }

        function resetGame() {
            currentLevel = 0;
            totalErrors = 0;
            errors = Array(levels.length).fill(0); // Reiniciar el conteo de errores por nivel
            loadLevel(currentLevel); // Volver a cargar el primer nivel
        }
    </script>

</body>

</html>